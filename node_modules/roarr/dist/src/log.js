"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ROARR = void 0;
const boolean_1 = require("boolean");
const fast_json_stringify_1 = __importDefault(require("fast-json-stringify"));
const globalthis_1 = __importDefault(require("globalthis"));
const factories_1 = require("./factories");
const stringify = fast_json_stringify_1.default({
    properties: {
        context: {
            additionalProperties: true,
            type: 'object',
        },
        message: {
            type: 'string',
        },
        sequence: {
            type: 'integer',
        },
        time: {
            type: 'integer',
        },
        version: {
            type: 'string',
        },
    },
    type: 'object',
});
const globalThis = globalthis_1.default();
const ROARR = globalThis.ROARR = factories_1.createRoarrInitialGlobalState(globalThis.ROARR || {});
exports.ROARR = ROARR;
let logFactory = factories_1.createLogger;
// eslint-disable-next-line node/no-process-env
const enabled = boolean_1.boolean((_a = process.env.ROARR_LOG) !== null && _a !== void 0 ? _a : '');
if (!enabled) {
    logFactory = factories_1.createMockLogger;
}
exports.default = logFactory((message) => {
    if (ROARR.write) {
        // Stringify message as soon as it is received to prevent
        // properties of the context from being modified by reference.
        const body = stringify(message);
        ROARR.write(body);
    }
});
